<idea-plugin>
    <extensions defaultExtensionNs="com.intellij">
        <experimentalFeature id="org.rust.cargo.build.tool.window" percentOfUsers="100">
            <description>Enable Cargo tasks to use Build Tool Window. Requires Rust +1.48.0</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.cargo.test.tool.window" percentOfUsers="100">
            <description>Show test results in Test Tool Window</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.cargo.fetch.actual.stdlib.metadata" percentOfUsers="100">
            <description>Fetch metadata of actual stdlib crates instead of using hardcoded data</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.macros.proc" percentOfUsers="0">
            <description>Enables all types of procedural macro expansion</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.macros.proc.function-like" percentOfUsers="100">
            <description>Enables function-like procedural macro expansion</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.macros.proc.derive" percentOfUsers="100">
            <description>Enables derive procedural macro expansion</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.macros.proc.attr" percentOfUsers="0">
            <description>Enables attribute procedural macro expansion</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.crates.local.index" percentOfUsers="100">
            <description>Enables crates local index</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.cargo.emulate.terminal" percentOfUsers="100">
            <description>Emulate terminal in output console by default</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.cargo.evaluate.build.scripts" percentOfUsers="100">
            <description>Run build scripts while project refresh. It allows collecting information about generated items like `cfg` options, environment variables, etc</description>
        </experimentalFeature>
        <experimentalFeature id="org.rust.ide.intentions.macros.function-like" percentOfUsers="0">
            <description>Invoke intention actions inside function-like macro expansions</description>
        </experimentalFeature>
    </extensions>
</idea-plugin>
